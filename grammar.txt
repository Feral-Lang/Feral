BLOCK = '{' STATEMENTS '}'

STATEMENTS = [STATEMENT]*

STATEMENT = VAR_DECL
	| FUNC_DEF
	| CONDITIONAL
	| FOR
	| WHILE
	| RETURN
	| CONTINUE
	| BREAK
	| DEFER
	| EXPR_COLS

EXPR_COLS = EXPR ';'
EXPR = L15

L15 = L14 [',' L14]*
L14 = L13 [['=' '+=' '-=' '*='
	    '/=' '%=' '<<=' '>>='
	    '&=' '|=' '^='] L13]*
L13 = L12 ['||' L12]*
L12 = L11 ['&&' L11]*
L11 = L10 ['|' L10]*
L10 = L09 ['^' L09]*
L09 = L08 ['&' L08]*
L08 = L07 ['==' '!=' L07]*
L07 = L06 ['<' '<=' '>' '>=' L06]*
L06 = L05 ['<<' '>>' L05]*
L05 = L04 ['+' '-' L04]*
L04 = L03 ['/' '*' '%' '**' L03]*
L03 = ['++x' '--x' 'u+' 'u-' '!' '~']* L02
L02 = L01 ['x++' 'x--']{0,1}
L01 = '(' EXPR ')'
	| TERM ['(' EXPR ')' | '[' EXPR ']' | '.' TERM]*

TERM = iden | str | int | flt | atom

VAR_DECL_BASE = L01 '=' L13
VAR_DECL = ['global' | 'let'] VAR_DECL_BASE [',' VAR_DECL_BASE]* ';'

DEF_ARGS = iden '=' L13 # default args
VA_ARGS = iden '...'
KW_ARGS = atom
KW_ARGS_CALL = iden '=' L13
FUNC_DECL_ARGS = iden [',' iden]* [',' KW_ARGS]{0,1} [[',' DEF_ARGS]* | [',' VA_ARGS]{0,1}]
FUNC_CALL_ARGS = [KW_ARGS_CALL | L13]*

FUNC_DEF = 'fn' '(' FUNC_DECL_ARGS ')'
	BLOCK

CONDITIONAL = 'if' L14 BLOCK ['elif' L14 BLOCK]* ['else' BLOCK]{0,1}

FOR = 'for' iden 'in' L13 BLOCK
	| 'for' [EXPR]{0,1} ';' [EXPR]{0,1} ';' [EXPR]{0,1} BLOCK

WHILE = 'while' L14 BLOCK

RETURN = 'return' [L14]{0,1} ';'
CONTINUE = 'continue' ';'
BREAK = 'break' ';'
DEFER = 'defer' [BLOCK | L14 ';']
