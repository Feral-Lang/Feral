let io = import('std/io');
let fs = import('std/fs');
let os = import('std/os');
let vec = import('std/vec');
let logging = import('std/logging');

if feral.args.find('--stderr') {
	logging.addTarget(io.stderr);
}

let tempDir = fs.pathFrom(feral.installPath, 'temp');
let pkgExePath = fs.pathFrom(feral.installPath, 'bin', 'pkg.fer');

logging.trace('Checking if directory exists: ', tempDir);
if !fs.dirExists(tempDir) {
	logging.info('Creating directory: ', tempDir);
	fs.mkdir(tempDir);
}
logging.trace('Checking if path exists: ', pkgExePath);
if fs.exists(pkgExePath) {
	logging.info('Feral pkg already exists in: ', pkgExePath, '; Use `feral pkg` to manage packages');
	feral.exit(0);
}

let cmd = '';
let cmdOutLines = vec.new();
inline if os.name == 'windows' {
let gitCmd = os.findExec('git.exe');
} else {
let gitCmd = os.findExec('git');
}
if gitCmd.empty() {
	logging.fatal('Failed to find git.');
	raise('Failed to find git. Please make sure it is installed and available in one of the PATHs');
}

# Download and Install Feral's Pkg

# Download Pkg
let pkgRepo = fs.pathFrom(tempDir, 'Pkg');
cmd = gitCmd;
if fs.dirExists(pkgRepo) {
	cmd += ' pull';
} else {
	cmd += ' clone --depth=1 https://github.com/Feral-Lang/Pkg ';
	cmd += pkgRepo;
	cmd += ' 2>&1';
}
logging.info('Fetching git repository for Pkg: ', cmd);
cmdOutLines.clear();
if os.exec(cmd, cmdOutLines) != 0 || cmdOutLines.empty() {
	raise('Failed to fetch Pkg git repository');
}
for line in cmdOutLines.each() {
	logging.trace('-- ', line);
}

# Install Pkg
let cwd = os.getCWD();
logging.trace('Setting current working directory to Pkg repo: ', pkgRepo);
os.setCWD(pkgRepo);
cmd = feral.binaryPath;
cmd += ' install 2>&1';
logging.info('Installing Pkg from \'', pkgRepo, '\': ', cmd);
cmdOutLines.clear();
if os.exec(cmd, cmdOutLines) != 0 || cmdOutLines.empty() {
	raise('Failed to install Pkg');
}
for line in cmdOutLines.each() {
	logging.trace(line);
}
logging.trace('Resetting current working directory to: ', cwd);
os.setCWD(cwd);
logging.info('Successfully installed Pkg!');

io.println('Pkg bootstrap completed successfully! Use `feral pkg` to get started with the Feral package manager');