let assert = import('std/assert');

let vec = import('std/vec');
let regex = import('std/regex');

let testString = 'here is a number: 12.54, and a word: test, and whatever else.';
let re = regex.new('.*: ([.\\d]+).*: ([a-z]+)');

let capturesVec = vec.new();
assert.eq(re.match(testString, capturesVec), true);
assert.eq(capturesVec[0], 'here is a number: 12.54, and a word: test'); # captures[0] is the matched part of testString
assert.eq(capturesVec[1], '12.54');
assert.eq(capturesVec[2], 'test');
let capturesVec2 = vec.new();
assert.eq(re.match(testString, capturesVec2, true), true);
assert.eq(capturesVec2[0], '12.54');
assert.eq(capturesVec2[1], 'test');

let capturesStr = '';
assert.eq(re.match(testString, capturesStr), true);
assert.eq(capturesStr, 'here is a number: 12.54, and a word: test12.54test');
let capturesStr2 = '';
assert.eq(re.match(testString, capturesStr2, true), true);
assert.eq(capturesStr2, '12.54test');