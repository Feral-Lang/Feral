let str = import('std/str');
let vec = import('std/vec');

let s = '12345';

assert(s.len() == 5);
assert(!s.empty());
assert(s.front() == '1');
assert(s.back() == '5');
assert(s.push('a') == '12345a');
assert(s.pop() == '12345');
assert(s.set(0, '0') == '02345');
assert(s.insert(1, '1') == '012345');
assert(s.erase(0) == '12345');
assert(s.find('123') >= 0);
assert(s.find('0') < 0);
assert(s.lastidx() == 4);

let a = '\n\t  ' + s + ' \t';
assert(a.trim() == s);
a = 'abcde';
assert(a.upper() == 'ABCDE');

assert(s.split('3') == vec.new('12', '45'));

assert(s.starts_with('12'));
assert(s.ends_with('45'));

assert('025AF'.getBinStrFromHexStr() == '10010110101111');
assert('2665'.getBinStrFromHexStr() == '10011001100101');
let heart = '2665'.getUTF8CharFromHexString();
assert(heart.len() == 3);
assert(heart[0].byt() == 226);
assert(heart[1].byt() == 153);
assert(heart[2].byt() == 165);

assert('A'.byt() == 65);
assert(66.chr() == 'B');
assert(' '.is_space());
assert(!'5'.is_space());