let assert = import('std/assert');

let os = import('std/os');

# os.sleep() test is in testdir.fer itself
# having it here caused this program to hang
# probably because there were no interrupts
# while the main thread (testdir) is waiting
# for this thread; this is an issue with
# how sleep_for/sleep_until (and possibly others)
# work; at least that's what I understand

os.setEnv('__tmp__', 'val');
assert.eq(os.getEnv('__tmp__'), 'val');

# this script is probably running thanks to os.exec()

# TODO: add os.system() test

os.name;

let cwd = os.getCWD();
if os.name == 'windows' {
	os.setCWD('C:\\');
} else {
	os.setCWD('/');
}
assert.ne(os.getCWD(), cwd);
os.setCWD(cwd);
assert.eq(os.getCWD(), cwd);

# len, 0 => not found
if os.name == 'windows' {
	assert.gt(os.findExec('ipconfig.exe').len(), 0);
} else {
	assert.gt(os.findExec('ls').len(), 0);
}
assert.eq(os.findExec('randomword'), nil);

# chmod