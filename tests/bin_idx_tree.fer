let vec = import('std/vec');

let data = vec.new(2, 1, 1, 3, 2, 3, 4, 5, 6, 7, 8, 9);
let bit = vec.new(cap = data.len());
for let i = 0; i < bit.cap(); ++i { bit.push(0); }

# add a value to BIT
let add = fn(idx, val) {
	let i = idx + 1;
	for ; i <= data.len(); i += i & (-i) {
		bit[i - 1] += val;
	}
};

# use the BIT for addition of indices [0, idx]
let sum = fn(idx) {
	let i = idx + 1;
	let sum = 0;
	while i > 0 {
		sum += bit[i - 1];
		i -= i & (-i);
	}
	return sum;
};

# feed elements from data in BIT
for let i = 0; i < data.len(); ++i { add(i, data[i]); }

assert(sum(0) == 2);
assert(sum(5) == 12);