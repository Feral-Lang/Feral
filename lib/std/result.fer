let error = import('std/error');

let Result = struct(
	val = nil,
	isok = false
);
Result.setTypeName('Result');

let ok = fn(val) {
	return Result(ref(val), true);
};

let err = fn(code, msg...) {
	return Result(error.new(code, msg...), false);
};

let isOk in Result = fn() { return self.isok; };
let isErr in Result = fn() { return !self.isok; };

let getVal in Result = fn() { return ref(self.val); };

let str in Result = fn() {
	let s = 'Result<';
	s += val.str();
	s += '>';
	return ref(s);
};