mload('std/Map');

let str = import('std/str');
let vec = import('std/vec');

let '==' in MapTy = fn(other) {
	if self._type_() != other._type_() { return false; }
	if self.len() != other.len() { return false; }
	for e in self.each() {
		if other[e.0] != e.1 { return false; }
	}
	return true;
};

let keys in MapTy = fn() {
	let v = vec.new(refs = true);
	for e in self.each() {
		v.push(e.0);
	}
	return v;
};

let str in MapTy = fn() {
	let res = '{';
	for pair in self.each() {
		res += pair.0.str();
		res += ': ';
		res += pair.1.str();
		res += ', ';
	}
	if !self.empty() {
		res.pop();
		res.pop();
	}
	res += '}';
	return res;
};