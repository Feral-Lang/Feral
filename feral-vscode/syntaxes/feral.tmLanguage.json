{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Feral",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#strings_single"
		},
		{
			"include": "#strings_back"
		},
		{
			"include": "#numerics"
		},
		{
			"include": "#functions"
		},
		{
			"include": "#atoms"
		},
		{
			"include": "#struct_types"
		},
		{
			"include": "#assignments"
		},
		{
			"include": "#line_comment"
		},
		{
			"include": "#block_comment"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [{
				"name": "keyword.control.feral",
				"match": "\\b(let|defer|struct|trait|fn|lambda|return|if|elif|else|for|in|while|continue|break)\\b"
			},
			{
				"name": "keyword.other",
				"match": "\\b(true|false|nil)\\b"
			},
			{
				"name": "keyword.operator",
				"match": "\\b(self)\\b"
			},
			{
				"comment": "structures/traits",
				"match": "\\b(struct|trait)\\b[\\s]+\\b(.*)\\b",
				"captures": {
					"1": {
						"name": "keyword.control.feral"
					},
					"2": {
						"name": "entity.name.tag"
					}
				}
			},
			{
				"comment": "data types for member functions",
				"match": "\\<[\\s]*\\b(.*)\\b[\\s]*\\>",
				"captures": {
					"1": {
						"name": "entity.name.tag"
					}
				}
			}]
		},
		"strings": {
			"name": "string.quoted.double.feral",
			"begin": "\"",
			"end": "\"",
			"patterns": [{
				"name": "constant.character.escape.feral",
				"match": "\\\\."
			}]
		},
		"strings_single": {
			"name": "string.quoted.single.feral",
			"begin": "'",
			"end": "'",
			"patterns": [{
				"name": "constant.character.escape.feral",
				"match": "\\\\."
			}]
		},
		"strings_back": {
			"name": "string.quoted.single.feral",
			"begin": "`",
			"end": "`",
			"patterns": [{
				"name": "constant.character.escape.feral",
				"match": "\\\\."
			}]
		},
		"numerics": {
			"patterns": [{
				"match": "\\b([0-9]+[\\.]*[0-9]*)\\b",
				"captures": {
					"1": {
						"name": "constant.numeric"
					}
				}
			}]
		},
		"functions": {
			"patterns": [{
				"match": "[\\s\\.]*\\b([_\\w]+)\\b[\\s]*\\(",
				"captures": {
					"1": {
						"name": "entity.name.function"
					}
				}
			}]
		},
		"atoms": {
			"patterns": [{
				"name": "entity.name.tag",
				"match": "(^|[\\s]+)\\.[a-zA-Z0-9_]+"
			}]
		},
		"struct_types": {
			"patterns": [{
				"name": "entity.name.class",
				"match": "\\b[a-zA-Z0-9_]+_t\\b"
			}]
		},
		"assignments": {
			"patterns": [{
				"match": "\\b([_\\w]+)\\b[\\s]*\\=(?!\\=)[\\s]*",
				"captures": {
					"1": {
						"name": "entity.name.class"
					}
				}
			}]
		},
		"line_comment": {
			"comment": "Single-line comment",
			"name": "comment.line",
			"begin": "#",
			"end": "$"
		},
		"block_comment": {
			"comment": "Block comment",
			"name": "comment.block",
			"begin": "/\\*",
			"end": "\\*/",
			"patterns": [
				{
					"include": "#block_comment"
				}
			]
		}
	},
	"scopeName": "source.fer"
}