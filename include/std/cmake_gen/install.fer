let str = import('std/str');
let fmt = import('std/fmt');
let lang = import('std/lang');

let install_base =
`# Install {self.install_name}
install(DIRECTORY "$\\{CMAKE_SOURCE_DIR}/{self.src_path}/"
	DESTINATION "$\\{CMAKE_INSTALL_PREFIX}/{self.src_path}/feral/{self.proj_name}"
	FILES_MATCHING PATTERN "{self.pattern}"
)`;

let install_t = lang.struct(
	proj_name = '',
	install_name = 'sample_install',
	src_path = 'include',
	pattern = '*.*'
);

let new = fn(name, proj) { return install_t(install_name = name, proj_name = proj); };

let set_src_path in install_t = fn(path) { self.src_path = path; return self; };
let set_pattern in install_t = fn(pattern) { self.pattern = pattern; return self; };

let gen in install_t = fn() {
	return fmt.template(install_base);
};